buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'gtforge'
            url = 'https://gregtech.overminddl1.com/'
        }
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

/*
 * Copyright 2020 The GTNH Team
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

plugins {
    id "de.undercouch.download" version "4.0.4"
}

apply plugin: 'forge'
apply plugin: 'signing'
apply plugin: 'idea'

idea{
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

ext.configFile = file 'build.properties'
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.majorUpdate + '.' + config.minorUpdate + '.' + config.buildNumber
group = 'com.github.gtnh.gtppnt' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'gtppnt' + '[' + config.minecraft.version + ']'

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}-${config.minecraft.version}"
	replaceIn "GTAFMod.java"
	replace "@version@", project.version
    runDir = 'eclipse'
}

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
	maven {	//Applecore, NEI, chicken core and lib
		name = "GregTech maven"
		url = "https://gregtech.overminddl1.com/"
	}
    maven { //IC2
        name = "IC2 maven"
        url = "http://maven.ic2.player.to/"
    }
	maven { // OpenComputers
        name "OpenComputers maven"
        url "http://maven.cil.li/"
    }
	maven { // EnderIO
        name "Tterrag maven"
        url "https://maven.tterrag.com/"
    }
}

dependencies {
    compile "codechicken:CodeChickenLib:${config.minecraft.version}-${config.codechickenlib.version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft.version}-${config.codechickencore.version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft.version}-${config.nei.version}:dev"
    compile "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"
    compile "micdoodle8.mods:MicdoodleCore:${config.galacticraft.version}:Dev"
    compile "micdoodle8.mods:GalacticraftCore:${config.galacticraft.version}:Dev"
    compile "micdoodle8.mods:Galacticraft-Planets:${config.galacticraft.version}:Dev"
    compile "li.cil.oc:OpenComputers:MC${config.minecraft.version}-${config.opencomputers.version}:dev"
	compile "mcp.mobius.waila:Waila:${config.waila.version}_${config.minecraft.version}"
    compileOnly "applecore:AppleCore:${config.applecore.version}:api"
    compileOnly "com.enderio.core:EnderCore:${config.minecraft.version}-${config.endercore.version}:dev"
    compileOnly "com.enderio:EnderIO:${config.minecraft.version}-${config.enderio.version}:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

//Include resources fixme remove this eventually, we need this so that Minecraft Client running can load resources.
sourceSets { main { output.resourcesDir = output.classesDir } }
